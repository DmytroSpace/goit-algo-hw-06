import networkx as nx
import matplotlib.pyplot as plt

# Створюємо граф
G = nx.Graph()

G.add_nodes_from(["Ковель", "Луцьк", "Дубно", "Тернопіль", "Чернівці", "Львів", "Рівне", "Житомир", "Київ", "Полтава", "Харків",
                   "Ужгород", "Мукачево", "Стрий", "Хмельницький", "Вінниця", "Умань", "Кропивницький", "Дніпро", "Донецьк",
                   "Дебальцеве", "Луганськ", "Чернігів", "Біла Церква", "Одеса", "Миколаїв", "Херсон", "Мелітополь", "Маріуполь",
                   "Запоріжжя", "Джанкой", "Сімферополь", "Ялта"])

edges_with_weights = [
    ("Ковель", "Луцьк", 80), ("Луцьк", "Дубно", 50), ("Дубно", "Тернопіль", 60), ("Тернопіль", "Чернівці", 130),
    ("Львів", "Дубно", 90), ("Дубно", "Рівне", 70), ("Рівне", "Житомир", 100), ("Житомир", "Київ", 130),
    ("Київ", "Полтава", 150), ("Полтава", "Харків", 180),
    ("Ужгород", "Мукачево", 40), ("Мукачево", "Стрий", 90), ("Стрий", "Тернопіль", 110),
    ("Тернопіль", "Хмельницький", 90), ("Хмельницький", "Вінниця", 70), ("Вінниця", "Умань", 110),
    ("Умань", "Кропивницький", 150), ("Кропивницький", "Дніпро", 170), ("Дніпро", "Донецьк", 100),
    ("Донецьк", "Дебальцеве", 60), ("Дебальцеве", "Луганськ", 90),
    ("Чернігів", "Київ", 140), ("Київ", "Біла Церква", 80), ("Біла Церква", "Умань", 120), ("Умань", "Одеса", 190),
    ("Одеса", "Миколаїв", 130), ("Миколаїв", "Херсон", 80), ("Херсон", "Мелітополь", 110), ("Мелітополь", "Маріуполь", 110),
    ("Харків", "Дніпро", 130), ("Дніпро", "Запоріжжя", 80), ("Запоріжжя", "Мелітополь", 90),
    ("Мелітополь", "Джанкой", 130), ("Джанкой", "Сімферополь", 80), ("Сімферополь", "Ялта", 90),
    ("Львів", "Стрий", 50), ("Житомир", "Вінниця", 70), ("Донецьк", "Маріуполь", 90), ("Херсон", "Джанкой", 90),
    ("Харків", "Дебальцеве", 100), ("Полтава", "Кропивницький", 140)
]

for u, v, weight in edges_with_weights:                         # Додаємо ребра до графа з вагою
    G.add_edge(u, v, weight=weight)


source = "Київ"                                                 # Знаходимо найкоротший шлях від Києва алгоритмом Дейкстри
shortest_paths = {node: nx.dijkstra_path(G, source, node, weight='weight') for node in G.nodes()}

print(f"Найкоротший шляхи від {source}:")                       # Виводимо найкоротші шляхи
for target, path in shortest_paths.items():
    distance = nx.path_weight(G, path, weight='weight')
    print(f"До {target}: {path} з відстанню {distance} км")

pos = {
    "Ковель": (25.1, 51.2), "Луцьк": (25.3, 50.7), "Дубно": (25.7, 50.4), "Тернопіль": (25.6, 49.6),
    "Чернівці": (25.9, 48.3), "Львів": (24.0, 49.8), "Рівне": (26.2, 50.6), "Житомир": (28.7, 50.3),
    "Київ": (30.5, 50.4), "Полтава": (34.5, 49.6), "Харків": (36.2, 50.0), "Ужгород": (22.3, 48.6), 
    "Мукачево": (22.7, 48.4), "Стрий": (23.5, 49.3), "Хмельницький": (27.0, 49.4), 
    "Вінниця": (28.5, 49.2), "Умань": (30.2, 48.7), "Кропивницький": (32.3, 48.5), 
    "Дніпро": (35.0, 48.4), "Донецьк": (37.8, 48.0), "Дебальцеве": (38.4, 48.3), 
    "Луганськ": (39.3, 48.6), "Чернігів": (31.3, 51.5), "Біла Церква": (30.0, 49.8), 
    "Одеса": (30.7, 46.5), "Миколаїв": (31.9, 46.9), "Херсон": (32.6, 46.6), 
    "Мелітополь": (35.3, 46.8), "Маріуполь": (37.5, 47.1), "Запоріжжя": (35.2, 47.8), 
    "Джанкой": (34.4, 45.7), "Сімферополь": (34.1, 44.9), "Ялта": (34.2, 44.5)
}

labels = nx.get_edge_attributes(G, 'weight')
nx.draw(G, pos=pos, with_labels=True, node_color='skyblue', font_weight='medium')
nx.draw_networkx_edge_labels(G, pos=pos, edge_labels=labels)
plt.show()